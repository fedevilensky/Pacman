using System;
using System.Collections;
using System.Collections.Generic;

public enum TileInfo {
    //representado como 0
    WALL,
    //representado como 1
    FLOOR,
    //representado como 2
    CONNECTION,
    //representado como 3
    WAYPOINT,
    //error
    ERROR
}
public class RoomCollection {


    public int[,] room1 = new int[,] {
        {0,2,0,0,2,0,0,2,0,0,2,0,0,2,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,3,2 },
        {0,1,0,0,0,1,0,0,0,1,0,0,0,1,0 },
        {0,1,0,3,1,1,1,1,1,1,1,1,0,1,0 },
        {2,1,1,1,0,0,0,1,0,0,0,1,1,1,2 },
        {0,1,0,1,0,0,0,1,0,0,0,1,0,1,0 },
        {0,1,0,1,1,1,1,1,1,1,1,3,0,1,0 },
        {0,1,0,0,0,1,0,0,0,1,0,0,0,1,0 },
        {2,3,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,2,0,0,2,0,0,2,0,0,2,0,0,2,0 }
    };

    private int[,] room2 = new int[,] {
        {0,2,0,0,0,0,0,2,0,0,2,0,0,2,0 },
        {2,1,1,1,1,1,1,1,0,0,1,1,1,1,0 },
        {0,1,0,1,0,0,0,1,0,1,3,0,0,1,0 },
        {0,1,0,1,0,0,0,1,0,1,0,0,0,1,0 },
        {0,1,0,1,0,3,1,1,1,1,0,3,1,1,2 },
        {0,1,1,3,0,1,0,0,0,1,0,1,0,1,0 },
        {0,1,0,0,0,1,0,0,0,1,0,1,0,1,0 },
        {0,1,0,0,0,1,0,0,0,1,0,1,0,1,0 },
        {2,1,1,1,1,1,1,1,1,3,0,1,1,3,2 },
        {0,2,0,0,2,0,0,2,0,0,0,0,0,2,0 }
    };

    private int[,] room3 = new int[,] {
        {0,2,0,0,2,0,0,2,0,0,2,0,0,0,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,3,2 },
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0 },
        {0,1,0,3,1,1,1,1,1,1,1,3,0,1,0 },
        {0,1,0,1,0,0,0,1,0,0,0,1,0,1,0 },
        {0,1,0,1,0,3,1,1,1,1,0,1,0,1,0 },
        {0,1,0,1,0,1,0,0,0,1,0,1,0,1,0 },
        {0,1,0,1,0,1,0,0,0,1,0,1,0,1,0 },
        {2,1,1,1,1,1,1,1,1,3,1,1,1,1,2 },
        {0,2,0,0,2,0,0,2,0,0,2,0,0,2,0 }
    };


    private int[,] room4 = new int[,] {
        {0,2,0,0,2,0,0,0,0,0,2,0,0,2,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0 },
        {0,1,0,1,3,1,1,1,0,0,0,0,0,1,0 },
        {2,1,0,1,0,1,0,1,0,1,1,1,3,1,0 },
        {0,1,0,1,0,1,0,1,0,1,0,0,0,0,0 },
        {0,1,3,1,0,1,1,1,0,3,1,1,1,1,0 },
        {0,1,0,0,0,1,0,0,0,0,0,0,0,1,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,2,0,0,0,0,0,2,0,0,2,0,0,2,0 }
    };

    private int[,] room5 = new int[,] {
        {0,2,0,0,0,0,0,2,0,0,0,0,0,2,0 },
        {2,1,1,1,3,1,1,1,1,1,1,1,1,1,2 },
        {0,1,0,0,1,0,0,0,0,0,0,0,0,1,0 },
        {0,1,1,1,1,1,1,3,1,1,1,1,1,3,0 },
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0 },
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0 },
        {0,3,1,1,1,1,1,3,1,1,1,1,1,1,0 },
        {0,1,0,0,0,0,0,0,0,0,1,0,0,1,0 },
        {2,1,1,1,1,1,1,1,1,1,3,1,1,1,2 },
        {0,2,0,0,0,0,0,2,0,0,0,0,0,2,0 }
    };

    private int[,] room6 = new int[,] {
        {0,2,0,0,0,0,0,2,0,0,0,0,0,2,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,1,0,0,0,0,1,0,1,0,0,0,0,1,0 },
        {0,3,1,1,1,1,1,0,1,1,1,1,1,3,0 },
        {0,0,0,0,0,0,3,0,3,0,0,0,0,0,0 },
        {0,3,1,1,1,1,1,0,1,1,1,1,1,3,0 },
        {0,1,0,0,0,0,1,0,1,0,0,0,0,1,0 },
        {0,1,0,0,0,0,1,0,1,0,0,0,0,1,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,2,0,0,0,0,0,2,0,0,0,0,0,2,0 }
    };

    private int[,] room7 = new int[,] {
        {0,2,0,0,2,0,0,2,0,0,2,0,0,2,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,1,0,1,0,1,0,1,0,1,0,3,0,1,0 },
        {0,1,0,1,3,1,1,1,0,1,1,1,1,1,0 },
        {2,1,1,1,0,1,0,1,3,1,0,1,0,1,2 },
        {0,1,0,1,0,1,1,1,0,1,0,1,1,1,0 },
        {0,1,1,1,3,1,0,1,1,1,1,1,0,1,0 },
        {0,1,0,1,0,1,0,1,0,1,0,3,0,1,0 },
        {2,1,1,1,1,1,1,1,1,1,1,1,1,1,2 },
        {0,2,0,0,2,0,0,2,0,0,2,0,0,2,0 }
    };



    private List<TileInfo[,]> roomList = new List<TileInfo[,]>();

    // Use this for initialization
    public List<TileInfo[,]> GetList() {
        if (roomList.Count < 1) {
            roomList.Add(ConvertMatrix(room1));
            roomList.Add(ConvertMatrix(room2));
            roomList.Add(ConvertMatrix(room3));
            roomList.Add(ConvertMatrix(room4));
            roomList.Add(ConvertMatrix(room5));
            roomList.Add(ConvertMatrix(room6));
            roomList.Add(ConvertMatrix(room7));
        }
        return roomList;
    }

    private TileInfo[,] ConvertMatrix(int[,] givenRoom) {
        TileInfo[,] converted = new TileInfo[10, 15];
        for (int i = 0; i < givenRoom.GetLength(0); i++) {
            for (int j = 0; j < givenRoom.GetLength(1); j++) {
                converted[i, j] = IntToTile(givenRoom[i, j]);
            }
        }
        return converted;
    }

    private TileInfo IntToTile(int number) {
        TileInfo ret;
        switch (number) {
            case 0:
                ret = TileInfo.WALL;
                break;
            case 1:
                ret = TileInfo.FLOOR;
                break;
            case 2:
                ret = TileInfo.CONNECTION;
                break;
            case 3:
                ret = TileInfo.WAYPOINT;
                break;
            default:
                ret = TileInfo.ERROR;
                break;
        }
        return ret;
    }

}
